{"version":3,"sources":["webpack:///./src/views/master/department-create.vue?537b","webpack:///src/views/master/department-create.vue","webpack:///./src/views/master/department-create.vue?355c","webpack:///./src/views/master/department-create.vue","webpack:///./src/graphql/department.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","staticClass","scopedSlots","_u","key","fn","passes","on","$event","preventDefault","onSubmit","attrs","$apollo","queries","department","errors","model","value","callback","$$v","$set","expression","loading","reset","staticRenderFns","name","data","isActive","methods","$observe","$route","query","id","$router","push","$clear","$refs","observer","apollo","variables","skip","component","gql","GET_ALL_DEPARTMENTS","GET_DEPARTMENT_BY_ID","UPSERT_DEPARTMENT","REMOVE_DEPARTMENT"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,qBAAqB,CAACE,IAAI,WAAWC,YAAY,MAAMC,YAAYR,EAAIS,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASL,GACzM,IAAIM,EAASN,EAAIM,OACjB,MAAO,CAACR,EAAG,OAAO,CAACS,GAAG,CAAC,OAAS,SAASC,GAAgC,OAAxBA,EAAOC,iBAAwBH,EAAOZ,EAAIgB,aAAa,CAACZ,EAAG,aAAa,CAACa,MAAM,CAAC,cAAc,qBAAqB,GAAK,WAAW,YAAY,qBAAsBjB,EAAIkB,QAAQC,QAAQC,WAAkB,QAAEhB,EAAG,UAAUA,EAAG,MAAM,CAACG,YAAY,wBAAwB,CAACH,EAAG,MAAM,CAACG,YAAY,eAAe,CAACH,EAAG,qBAAqB,CAACa,MAAM,CAAC,KAAO,OAAO,MAAQ,YAAYT,YAAYR,EAAIS,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASL,GACjd,IAAIe,EAASf,EAAIe,OACjB,MAAO,CAACjB,EAAG,UAAU,CAACa,MAAM,CAAC,MAAQ,OAAO,KAAO,OAAO,OAASI,GAAQC,MAAM,CAACC,MAAOvB,EAAIoB,WAAe,KAAEI,SAAS,SAAUC,GAAMzB,EAAI0B,KAAK1B,EAAIoB,WAAY,OAAQK,IAAME,WAAW,yBAAyB,MAAK,MAAS,GAAGvB,EAAG,MAAM,CAACG,YAAY,eAAe,CAACH,EAAG,UAAU,CAACa,MAAM,CAAC,GAAK,gBAAgB,MAAQ,SAAS,cAAgB,IAAIK,MAAM,CAACC,MAAOvB,EAAIoB,WAAmB,SAAEI,SAAS,SAAUC,GAAMzB,EAAI0B,KAAK1B,EAAIoB,WAAY,WAAYK,IAAME,WAAW,0BAA0B,GAAGvB,EAAG,MAAM,CAACG,YAAY,gBAAgBH,EAAG,WAAW,CAACa,MAAM,CAAC,QAAUjB,EAAI4B,SAASf,GAAG,CAAC,MAAQb,EAAI6B,UAAU,IAAI,WACxlBC,EAAkB,G,wBCoBtB,GACEC,KAAM,SACNC,KAAM,WACJ,MAAO,CACLZ,WAAY,CACVW,KAAM,GACNE,UAAU,GAEZL,SAAS,IAGbM,QAAS,CACPlB,SAAU,WACRf,KAAKkC,SACX,qBACQ,SAAR,OACQ,UAAR,kBACA,qBAaIN,MAAO,WACL,GAAI5B,KAAKmC,OAAOC,MAAMC,GACpB,OAAOrC,KAAKsC,QAAQC,KAAK,YAE3BvC,KAAKwC,OAAOxC,KAAKmB,YACjBnB,KAAKyC,MAAMC,SAASd,UAGxBe,OAAQ,CACNxB,WAAY,CACViB,MAAO,EAAb,KACMQ,UAFN,WAGQ,MAAO,CACLP,GAAIrC,KAAKmC,OAAOC,MAAMC,KAG1BQ,KAPN,WAQQ,OAAQ7C,KAAKmC,OAAOC,MAAMC,OCxEwU,I,YCOtWS,EAAY,eACd,EACAhD,EACA+B,GACA,EACA,KACA,KACA,MAIa,aAAAiB,E,qzCChBgBC,IAAH,KAArB,IAQMC,EAAsBD,IAAH,KAYnBE,EAAuBF,IAAH,KAWpBG,EAAoBH,IAAH,KAWjBI,EAAoBJ,IAAH","file":"js/chunk-4fe4de0c.13a4cc74.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ValidationObserver',{ref:\"observer\",staticClass:\"box\",scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar passes = ref.passes;\nreturn [_c('form',{on:{\"submit\":function($event){$event.preventDefault();return passes(_vm.onSubmit)}}},[_c('PageHeader',{attrs:{\"header-text\":\"Department Details\",\"to\":\"/acdepts\",\"link-text\":\"Department List\"}}),(_vm.$apollo.queries.department.loading)?_c('Loader'):_c('div',{staticClass:\"columns is-multiline\"},[_c('div',{staticClass:\"column is-3\"},[_c('ValidationProvider',{attrs:{\"name\":\"Name\",\"rules\":\"required\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nreturn [_c('c-input',{attrs:{\"label\":\"Name\",\"type\":\"text\",\"errors\":errors},model:{value:(_vm.department.name),callback:function ($$v) {_vm.$set(_vm.department, \"name\", $$v)},expression:\"department.name\"}})]}}],null,true)})],1),_c('div',{staticClass:\"column is-3\"},[_c('c-check',{attrs:{\"id\":\"acdept_active\",\"label\":\"Active\",\"indeterminate\":\"\"},model:{value:(_vm.department.isActive),callback:function ($$v) {_vm.$set(_vm.department, \"isActive\", $$v)},expression:\"department.isActive\"}})],1),_c('div',{staticClass:\"column is-3\"}),_c('BtnGroup',{attrs:{\"loading\":_vm.loading},on:{\"reset\":_vm.reset}})],1)],1)]}}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <ValidationObserver class=\"box\" v-slot=\"{ passes }\" ref=\"observer\">\r\n    <form @submit.prevent=\"passes(onSubmit)\">\r\n      <PageHeader header-text=\"Department Details\" to=\"/acdepts\" link-text=\"Department List\" />\r\n      <Loader v-if=\"$apollo.queries.department.loading\" />\r\n      <div class=\"columns is-multiline\" v-else>\r\n        <div class=\"column is-3\">\r\n          <ValidationProvider name=\"Name\" rules=\"required\" v-slot=\"{ errors }\">\r\n            <c-input v-model=\"department.name\" label=\"Name\" type=\"text\" :errors=\"errors\" />\r\n          </ValidationProvider>\r\n        </div>\r\n        <div class=\"column is-3\">\r\n          <c-check v-model=\"department.isActive\" id=\"acdept_active\" label=\"Active\" indeterminate />\r\n        </div>\r\n        <div class=\"column is-3\">\r\n        </div>\r\n        <BtnGroup :loading=\"loading\" @reset=\"reset\" />\r\n      </div>\r\n    </form>\r\n  </ValidationObserver>\r\n</template>\r\n\r\n<script>\r\nimport { GET_DEPARTMENT_BY_ID, UPSERT_DEPARTMENT } from \"@/graphql/department\";\r\n\r\nexport default {\r\n  name: \"AcDept\",\r\n  data: function() {\r\n    return {\r\n      department: {\r\n        name: \"\",\r\n        isActive: true\r\n      },\r\n      loading: false\r\n    };\r\n  },\r\n  methods: {\r\n    onSubmit: function() {\r\n      this.$observe(\r\n        this.$apollo.mutate({\r\n          mutation: UPSERT_DEPARTMENT,\r\n          variables: {\r\n            ...this.department\r\n          }\r\n          // update: (store, { data: { addAcDept } }) => {\r\n          //   const data = store.readQuery({ query: GET_AC_DEPTS });\r\n          //   data.acDepts = data.acDepts.filter(x => x.id !== addAcDept.id);\r\n          //   if (!data.acDepts.some(x => x.id === addAcDept.id)) {\r\n          //     data.acDepts.push(addAcDept);\r\n          //   }\r\n          //   store.writeQuery({ query: GET_AC_DEPTS, data });\r\n          // }\r\n        })\r\n      );\r\n    },\r\n    reset: function() {\r\n      if (this.$route.query.id) {\r\n        return this.$router.push(\"/acdepts\");\r\n      }\r\n      this.$clear(this.department);\r\n      this.$refs.observer.reset();\r\n    }\r\n  },\r\n  apollo: {\r\n    department: {\r\n      query: GET_DEPARTMENT_BY_ID,\r\n      variables() {\r\n        return {\r\n          id: this.$route.query.id\r\n        };\r\n      },\r\n      skip() {\r\n        return !this.$route.query.id;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./department-create.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./department-create.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./department-create.vue?vue&type=template&id=6e177fea&\"\nimport script from \"./department-create.vue?vue&type=script&lang=js&\"\nexport * from \"./department-create.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import gql from \"graphql-tag\";\r\n\r\nexport const GET_DEPARTMENTS = gql`\r\n  query GetDepartments($isActive: true) {\r\n    departments(isActive: $isActive) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\nexport const GET_ALL_DEPARTMENTS = gql`\r\n  query GetAllDepartments {\r\n    departments {\r\n      id\r\n      name\r\n      isActive\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_DEPARTMENT_BY_ID = gql`\r\n  query GetDepartment($id: String!) {\r\n    department(id: $id) {\r\n      id\r\n      name\r\n      isActive\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\nexport const UPSERT_DEPARTMENT = gql`\r\n  mutation AddDepartment($id: String, $name: String!, $isActive: Boolean!) {\r\n    addDepartment(dept: { id: $id, name: $name, isActive: $isActive }) {\r\n      id\r\n      name\r\n      isActive\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\nexport const REMOVE_DEPARTMENT = gql`\r\n  mutation RemoveDepartment($id: String!) {\r\n    deleteDepartment(id: $id) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\n// export const getAcDepts = function(isActive) {\r\n//   return {\r\n//     query: GET_ALL_DEPARTMENTS,\r\n//     manual: true,\r\n//     result({ data, loading }) {\r\n//       if (!loading) {\r\n//         this.depts = data.acDepts.filter(\r\n//           (x) => isActive || x.isActive === true\r\n//         );\r\n//       }\r\n//     },\r\n//   };\r\n// };\r\n"],"sourceRoot":""}